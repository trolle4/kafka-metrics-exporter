name: Spring Boot CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/kafka-metrics-exporter

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            # For master branch, prepare release but don't perform yet
            mvn --batch-mode release:prepare \
              -DpreparationGoals="clean verify" \
              -DpushChanges=false \
              -DlocalCheckout=true
          
            # Get the release version (the tagged version, not the new snapshot)
            VERSION=$(git describe --tags --abbrev=0)
            echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          else
            # For other branches, just use the SHA
            VERSION="${GITHUB_SHA::7}"
            echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        run: |
          mvn spring-boot:build-image \
            -Dspring-boot.build-image.imageName=${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }} \
            -DskipTests
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }} ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Complete Release
        if: github.ref == 'refs/heads/master'
        run: |
          # Now perform the release to update to next snapshot version
          mvn --batch-mode release:perform \
            -DlocalCheckout=true